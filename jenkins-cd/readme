

http://localhost:8080/
 .) Manage Jenkins > Configure System 
   - Maven Configuration > Default global settings provider > Global settings file on filesystem
     .) File path: /opt/maven_config/.m2/settings.xml
   - Maven > Maven installations > Add Maven
     .) Deselect 'Install automatically', 
     .) Name: maven3
     .) MAVEN_HOME: /opt/apache-maven-3.3.3


===== Continuous Delivery Demo planets =====

-) SCRIPTING

 .) demo/createJob.sh

-) MANUAL

.) Create new job
 .) Project name: planets
 .) Maven project
 .) Source Code Management
  .) Git: https://github.com/tecris/planets.git


.) Build
  .) Goals and options: clean deploy
.) Post Build:
  .) Execute shell:
    .) Build image
    .) curl -v -X POST -H "Content-Type:application/tar" --data-binary '@/opt/docker/dockerfiles/Dockerfile.planets.tar.gz' \
	http://docker.host:4243/build?t=org.tecris:5000/planets:${BUILD_NUMBER}
  .) Execute shell:
    .) Push image to docker registry
    .) curl -v -X POST -H "X-Registry-Auth:123" http://docker.host:4243/images/org.tecris:5000/planets/push?tag=${BUILD_NUMBER}
  .) Execute shell:
    .) Stop container
    .) curl -X POST http://docker.host:4243/containers/planets-snapshot/stop
  .) Execute shell:
    .) Delete container
    .) curl -X DELETE http://docker.host:4243/containers/planets-snapshot
  .) Execute shell:
    .) Create container
    .) curl -i -H "Content-Type: application/json" \
        -X POST -d '{"Image": "org.tecris:5000/wildfly-mysql:9.0.2", "NetworkMode":"bridge",
        "PortBindings":{ "8080/tcp":[ {"HostIp":"", "HostPort":"8084"}], "9990/tcp":[ {"HostIp":"", "HostPort":"9990"}]} ,"PublishAllPorts":true}' \
        http://docker.host:4243/containers/create?name=planets-snapshot
  .) Execute shell:
    .) Start container
    .) curl -X POST http://docker.host:4243/containers/planets-snapshot/start
