---
- hosts: localhost
  vars:
    repo_path: /opt/git/hello-world.git
  tasks:
# User creation done in Docker until sort out why this user cannot use publickey to login
#   - name: Create git user
#     user: name=git groups=sudo
    - name: Create .ssh directory
      file: path=/home/git/.ssh owner=root group=root mode=0755 state=directory
    - name: Create repository directory
      file: path={{repo_path}} owner=git group=git mode=0775 state=directory
    - name: Create repositories
      action: command chdir={{ repo_path }} creates={{ repo_path }}/HEAD git init --bare
    - name: ensure repositories permisions
      file: path={{ repo_path }} owner=git group=git recurse=yes
    - name: Copy key
      copy: src=files/authorized_keys dest=/home/git/.ssh/authorized_keys owner=git group=git mode=0700

# RUN adduser --disabled-password --gecos "" $USER
# RUN adduser $USER sudo
# ADD authorized_keys /home/$USER/.ssh/authorized_keys
# RUN chown $USER /home/$USER/.ssh/authorized_keys
# RUN chown -R $USER:$USER /home/$USER/.ssh/authorized_keys
# RUN chmod 700 /home/$USER/.ssh/authorized_keys


#- name: ensure git user exists
#  action: user name=git shell=/usr/bin/git-shell home=/home/git generate_ssh_key=yes

#- name: ensure authorized_keys exists
#  action: copy src=files/authorized_keys dest=/home/git/.ssh/authorized_keys owner=git mode=0600

#- name: ensure repository directories exists
#  action: file path={{ eher_git_path }} owner=git group=git mode=0775 state=directory

#- name: create repositories
#  action: command chdir={{ eher_git_path }} creates={{ eher_git_path }}/HEAD git init --bare

#- name: ensure repositories permisions
#  action: command chdir={{ eher_git_path }} chown git.git -R .

#- name: ensure post-receive hooks exists
#  action: template src=hooks/post-receive.j2 dest={{ eher_git_path }}/hooks/post-receive owner=git mode=0755
